import QtQuick 2.0
import Sailfish.Silica 1.0
import Aurora.Controls 1.0

Page {
    property string currentContactFName
    property string currentContactLName
    property string currentContactMName
    property string currentContactAdderss
    property string currentContactPhoneNumber
    property string currentContactMail
    property string currentContactBDate

    objectName: "mainPage"
    allowedOrientations: Orientation.All
    AppBar {
        id: bar
        headerText: qsTr("Контакты")

        AppBarSpacer {}

        AppBarButton {
            context: "Добавить"
            icon.source: "image://theme/icon-m-add"
            onClicked: {
                var dialog = pageStack.push(Qt.resolvedUrl(
                                                "../dialogs/dialogContact.qml"))
                dialog.accepted.connect(function () {
                    contactModel.append({
                                            "contact": dialog.contactText
                                        })
                })
            }
        }

        AppBarButton {
            context: "Править контакт"
            icon.source: "image://theme/icon-m-edit"
            onClicked: {

            }
        }

        AppBarButton {
            context: "Удалить контакт"
            icon.source: "image://theme/icon-m-delete"
            onClicked: {
                var dialog = pageStack.push(Qt.resolvedUrl(
                                                "../dialogs/dialogContact.qml"))
                dialog.accepted.connect(function () {
                    contactModel.append({
                                            "contact": dialog.contactText
                                        })
                })
            }
        }
    }

    SilicaListView {
        anchors.fill: parent
        delegate: ListItem {
            Column {
                anchors.centerIn: parent
                width: parent.width

                onFocusChanged: {
                    currentContactFName = tfContactFName.text
                    currentContactLName = tfContactLName.text
                    currentContactMName = tfContactMName.text
                    currentContactAdderss = "обращение"
                    currentContactPhoneNumber = tfContactPhoneNumber.text
                    currentContactMail = tfContactMail.text
                    currentContactBDate = tf.text
                    console.log(currentContactFName)
                    console.log(currentContactLName)
                    console.log(currentContactMName)
                    console.log(currentContactAdderss)
                    console.log(currentContactPhoneNumber)
                    console.log(currentContactMail)
                    console.log(currentContactBDate)
                }

                TextField {
                    id: tfContactFName
                    width: parent.width
                    placeholderText: qsTr("Фамилия")
                    label: qsTr("фамилия")
                    inputMethodHints: Qt.ImhUrlCharactersOnly
                    //            EnterKey.onClicked: textArea.focus = true
                }

                TextField {
                    id: tfContactLName
                    width: parent.width
                    placeholderText: qsTr("Имя")
                    label: qsTr("имя")
                    inputMethodHints: Qt.ImhUrlCharactersOnly
                    //            EnterKey.onClicked: textArea.focus = true
                }

                TextField {
                    id: tfContactMName
                    width: parent.width
                    placeholderText: qsTr("Отчество")
                    label: qsTr("отчество")
                    inputMethodHints: Qt.ImhUrlCharactersOnly
                    //            EnterKey.onClicked: textArea.focus = true
                }

                ComboBox {
                    id: cbContactAddress
                    width: parent.width
                    label: "обращение"

                    menu: ContextMenu {
                        MenuItem {
                            text: ""
                        }
                        MenuItem {
                            text: "господин"
                        }
                        MenuItem {
                            text: "госпожа"
                        }
                        MenuItem {
                            text: "товарищ"
                        }
                    }
                }

                TextField {
                    id: tfContactPhoneNumber
                    width: parent.width
                    placeholderText: qsTr("Номер телефона")
                    label: qsTr("номер телефона")
                    inputMethodHints: Qt.ImhFormattedNumbersOnly
                    validator: RegExpValidator {
                        regExp: /^(\+7|8)[0-9]{10}$/
                    }
                    EnterKey.enabled: !errorHighlight
                    EnterKey.iconSource: "image://theme/icon-m-enter-next"
                    EnterKey.onClicked: textArea.focus = true
                }

                TextField {
                    id: tfContactMail
                    width: parent.width
                    placeholderText: qsTr("Эл. почта")
                    label: qsTr("эл. почта")
                    inputMethodHints: Qt.ImhFormattedNumbersOnly
                    validator: RegExpValidator {
                        regExp: /^(\+7|8)[0-9]{10}$/
                    }
                    EnterKey.enabled: !errorHighlight
                    EnterKey.iconSource: "image://theme/icon-m-enter-next"
                    EnterKey.onClicked: textArea.focus = true
                }

                Button {
                    anchors.horizontalCenter: parent.horizontalCenter
                    //            enabled: tfLogin.acceptableInput && tfPhoneNumber.acceptableInput
                    //                     && tsAgree.checked
                    text: qsTr("Сохранить")
                    onClicked: {
                        pageStack.push(Qt.resolvedUrl("AccountPage.qml"), {
                                           "_PhoneNumber": tfPhoneNumber.text,
                                           "_Login": tfLogin.text
                                       })
                    }
                }
            }

            //            model: 100
            VerticalScrollDecorator {}
        }
    }
}
